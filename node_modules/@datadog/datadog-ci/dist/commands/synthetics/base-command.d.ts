import { Command } from 'clipanion';
import { Logger } from '../../helpers/logger';
import { DatadogCIConfig, MainReporter, Reporter } from './interfaces';
export type RecursivePartial<T> = {
    [P in keyof T]?: RecursivePartial<T[P]>;
};
export declare abstract class BaseCommand extends Command {
    protected config: DatadogCIConfig;
    protected reporter: MainReporter;
    protected apiKey: string | undefined;
    protected appKey: string | undefined;
    protected configPath: string | undefined;
    protected datadogSite: string | undefined;
    protected fips: boolean;
    protected fipsIgnoreError: boolean;
    protected fipsConfig: {
        fips: boolean;
        fipsIgnoreError: boolean;
    };
    protected logger: Logger;
    static getDefaultConfig(): DatadogCIConfig;
    protected resolveConfigFromEnv(): RecursivePartial<DatadogCIConfig>;
    protected resolveConfigFromCli(): RecursivePartial<DatadogCIConfig>;
    protected resolveConfig(): Promise<void>;
    protected setup(): Promise<void>;
    protected normalizeConfig(): void;
    protected validateConfig(): void;
    protected getReporters(): Reporter[];
}
